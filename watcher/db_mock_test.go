// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/SamsungSLAV/perun/db (interfaces: DB)

package watcher

import (
	perun "github.com/SamsungSLAV/perun"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDB is a mock of DB interface
type MockDB struct {
	ctrl     *gomock.Controller
	recorder *MockDBMockRecorder
}

// MockDBMockRecorder is the mock recorder for MockDB
type MockDBMockRecorder struct {
	mock *MockDB
}

// NewMockDB creates a new mock instance
func NewMockDB(ctrl *gomock.Controller) *MockDB {
	mock := &MockDB{ctrl: ctrl}
	mock.recorder = &MockDBMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDB) EXPECT() *MockDBMockRecorder {
	return m.recorder
}

// UpdateImage mocks base method
func (m *MockDB) UpdateImage(arg0 *perun.ImageFileInfo) error {
	ret := m.ctrl.Call(m, "UpdateImage", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateImage indicates an expected call of UpdateImage
func (mr *MockDBMockRecorder) UpdateImage(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateImage", reflect.TypeOf((*MockDB)(nil).UpdateImage), arg0)
}
